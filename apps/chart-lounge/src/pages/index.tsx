import React from 'react';
import { QueryClient, dehydrate } from '@tanstack/react-query';
import Head from 'next/head';
import { withInitialC15TData } from '@c15t/nextjs/pages';

import styles from './index.module.css';
import {
  Layout,
  InfoBox,
  AssetList,
  LinkBox,
  AssetForm,
  AssetCheckboxGroup,
  Hero,
} from '@/components';
import { fetchAssets, fetchTimeSeries } from '@/lib/fetchers';

export default function Home() {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Hero>
          <div className={styles.heroContent}>
            <h2>Welcome to Chart Lounge</h2>
            <p>Your go-to place for all things charts!</p>
          </div>
          <div className={styles.container}>
            <h1 className={styles.title}>
              Create <span className={styles.pinkSpan}>T3</span> App
            </h1>
            <div className={styles.cardRow}>
              <LinkBox
                title="First Steps →"
                href="https://create.t3.gg/en/usage/first-steps"
              >
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </LinkBox>
              <LinkBox>
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </LinkBox>
            </div>
          </div>
        </Hero>
        <AssetForm />
        <AssetCheckboxGroup />
        <InfoBox>ℹ️ This page shows how to use SSG with React-Query.</InfoBox>
        <AssetList />
      </Layout>
    </>
  );
}

async function getStaticProps() {
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery({
    queryKey: ['assets', 10],
    queryFn: () => fetchAssets(10),
  });
  await queryClient.prefetchQuery({
    queryKey: ['timeSeries', 100],
    queryFn: () => fetchTimeSeries(100),
  });

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
}
withInitialC15TData('http://localhost:8787', getStaticProps);
